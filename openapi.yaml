openapi: 3.0.0
paths:
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '401':
          description: ''
      tags:
        - auth
  /auth/google:
    get:
      operationId: AuthController_googleAuth
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '401':
          description: ''
      tags:
        - auth
  /auth/refresh:
    post:
      operationId: AuthController_refreshToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '401':
          description: ''
      tags:
        - auth
  /auth/logout:
    get:
      operationId: AuthController_logout
      parameters: []
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: ''
      tags:
        - auth
      security:
        - bearer: []
  /users/signup:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
      tags:
        - users
  /users/profile:
    get:
      operationId: UsersController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '401':
          description: ''
      tags:
        - users
      security:
        - bearer: []
  /products:
    get:
      operationId: ProductsController_find
      parameters:
        - name: market
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      tags:
        - products
  /products/markets:
    get:
      operationId: ProductsController_marketsAndCounts
      parameters: []
      responses:
        '200':
          description: 'Return `{market: string, count: number}`'
      tags:
        - products
  /products/create:
    post:
      operationId: ProductsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: ''
      tags:
        - products
      security:
        - bearer: []
  /products/delete/{productId}:
    delete:
      operationId: ProductsController_delete
      parameters:
        - name: productId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: ''
      tags:
        - products
      security:
        - bearer: []
info:
  title: Yatsa-Shop
  description: The Yatsa-Shop Back API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    LoginDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    LoginResponseDto:
      type: object
      properties:
        access_token:
          type: string
        expires_at:
          type: string
        refresh_token:
          type: string
      required:
        - access_token
        - expires_at
        - refresh_token
    RefreshTokenDto:
      type: object
      properties:
        refresh_token:
          type: string
      required:
        - refresh_token
    CreateUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
      required:
        - username
        - password
        - email
    Users:
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        password:
          type: string
        email:
          type: string
        role:
          type: string
      required:
        - id
        - username
        - password
        - email
        - role
    Product:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        price:
          type: number
        file:
          type: string
        description:
          type: string
        market:
          type: string
      required:
        - id
        - name
        - price
        - file
        - description
        - market
    CreateProductDto:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        description:
          type: string
        market:
          type: string
        file:
          type: string
      required:
        - name
        - price
        - description
        - market
