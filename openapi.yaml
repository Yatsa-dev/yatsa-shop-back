openapi: 3.0.0
paths:
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '401':
          description: ''
      tags:
        - auth
  /auth/google:
    get:
      operationId: AuthController_googleAuth
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '401':
          description: ''
      tags:
        - auth
  /users/signup:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
      tags:
        - users
  /products:
    get:
      operationId: ProductsController_find
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      tags:
        - products
  /products/create:
    post:
      operationId: ProductsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: ''
      tags:
        - products
      security:
        - bearer: []
  /products/update/{productId}:
    patch:
      operationId: ProductsController_update
      parameters:
        - name: productId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: ''
      tags:
        - products
      security:
        - bearer: []
  /products/update/file/{productId}:
    patch:
      operationId: ProductsController_updateFile
      parameters:
        - name: productId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: ''
      tags:
        - products
      security:
        - bearer: []
  /history:
    get:
      operationId: HistoryController_find
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
        '401':
          description: ''
      tags:
        - history
      security:
        - bearer: []
  /history/save:
    post:
      operationId: HistoryController_saveOrder
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHistoryDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
        '401':
          description: ''
      tags:
        - history
      security:
        - bearer: []
info:
  title: Yatsa-Shop
  description: The Yatsa-Shop Back API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    LoginDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    LoginResponseDto:
      type: object
      properties:
        access_token:
          type: string
        expires_at:
          type: string
      required:
        - access_token
        - expires_at
    CreateUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
      required:
        - username
        - password
        - email
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
        file:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - price
        - file
        - description
    CreateProductDto:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        description:
          type: string
        file:
          type: string
      required:
        - name
        - price
        - description
    UpdateProductDto:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        description:
          type: string
    History:
      type: object
      properties:
        id:
          type: number
        createdAt:
          type: string
        amount:
          type: number
        user:
          type: number
      required:
        - id
        - createdAt
        - amount
        - user
    CreateHistoryDto:
      type: object
      properties:
        amount:
          type: number
        createdAt:
          type: string
        user:
          type: object
      required:
        - amount
